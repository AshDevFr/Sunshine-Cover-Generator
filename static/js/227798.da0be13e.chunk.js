"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[227798],{227798:(t,n,o)=>{o.r(n),o.d(n,{fontFamily:()=>f,getInfo:()=>a,loadFont:()=>i});var e=o(662166),s={},a=()=>({fontFamily:"Chenla",importName:"Chenla",version:"v25",url:"https://fonts.googleapis.com/css2?family=Chenla:ital,wght@0,400",unicodeRanges:{khmer:"U+1780-17FF, U+19E0-19FF, U+200C-200D, U+25CC, U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{khmer:"https://fonts.gstatic.com/s/chenla/v25/SZc43FDpIKu8WZ9uUx3p.woff2"}}}}),f="Chenla",i=(t,n)=>((t,n,o)=>{const a=[],f=n?[n]:Object.keys(t.fonts);for(const i of f){if("undefined"===typeof FontFace)continue;if(!t.fonts[i])throw new Error(`The font ${t.fontFamily} does not have a style ${i}`);const n=o?.weights??Object.keys(t.fonts[i]);for(const f of n){if(!t.fonts[i][f])throw new Error(`The font ${t.fontFamily} does not  have a weight ${f} in style ${i}`);const n=o?.subsets??Object.keys(t.fonts[i][f]);for(const l of n){let n=t.fonts[i]?.[f]?.[l];if(!n)throw new Error(`weight: ${f} subset: ${l} is not available for '${t.fontFamily}'`);let r=`${t.fontFamily}-${i}-${f}-${l}`;const c=s[r];if(c){a.push(c);continue}const h=(0,e.IH)(`Fetching ${t.fontFamily} font ${JSON.stringify({style:i,weight:f,subset:l})}`),F=new FontFace(t.fontFamily,`url(${n}) format('woff2')`,{weight:f,style:i,unicodeRange:t.unicodeRanges[l]}),u=F.load().then((()=>{(o?.document??document).fonts.add(F),(0,e._8)(h)})).catch((t=>{throw s[r]=void 0,t}));s[r]=u,a.push(u)}}}return{fontFamily:t.fontFamily,fonts:t.fonts,unicodeRanges:t.unicodeRanges,waitUntilDone:()=>Promise.all(a).then((()=>{}))}})(a(),t,n)}}]);
//# sourceMappingURL=227798.da0be13e.chunk.js.map