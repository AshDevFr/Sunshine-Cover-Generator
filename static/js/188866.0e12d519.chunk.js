"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[188866],{188866:(E,t,n)=>{n.r(t),n.d(t,{fontFamily:()=>s,getInfo:()=>U,loadFont:()=>i});var o=n(662166),e={},U=()=>({fontFamily:"Amiri Quran",importName:"AmiriQuran",version:"v14",url:"https://fonts.googleapis.com/css2?family=Amiri+Quran:ital,wght@0,400",unicodeRanges:{arabic:"U+0600-06FF, U+0750-077F, U+0870-088E, U+0890-0891, U+0898-08E1, U+08E3-08FF, U+200C-200E, U+2010-2011, U+204F, U+2E41, U+FB50-FDFF, U+FE70-FE74, U+FE76-FEFC, U+102E0-102FB, U+10E60-10E7E, U+10EFD-10EFF, U+1EE00-1EE03, U+1EE05-1EE1F, U+1EE21-1EE22, U+1EE24, U+1EE27, U+1EE29-1EE32, U+1EE34-1EE37, U+1EE39, U+1EE3B, U+1EE42, U+1EE47, U+1EE49, U+1EE4B, U+1EE4D-1EE4F, U+1EE51-1EE52, U+1EE54, U+1EE57, U+1EE59, U+1EE5B, U+1EE5D, U+1EE5F, U+1EE61-1EE62, U+1EE64, U+1EE67-1EE6A, U+1EE6C-1EE72, U+1EE74-1EE77, U+1EE79-1EE7C, U+1EE7E, U+1EE80-1EE89, U+1EE8B-1EE9B, U+1EEA1-1EEA3, U+1EEA5-1EEA9, U+1EEAB-1EEBB, U+1EEF0-1EEF1",latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{arabic:"https://fonts.gstatic.com/s/amiriquran/v14/_Xmo-Hk0rD6DbUL4_vH8Zp5v5i2ssqe2.woff2",latin:"https://fonts.gstatic.com/s/amiriquran/v14/_Xmo-Hk0rD6DbUL4_vH8Zp5q5i3Esg.woff2"}}}}),s="Amiri Quran",i=(E,t)=>((E,t,n)=>{const U=[],s=t?[t]:Object.keys(E.fonts);for(const i of s){if("undefined"===typeof FontFace)continue;if(!E.fonts[i])throw new Error(`The font ${E.fontFamily} does not have a style ${i}`);const t=n?.weights??Object.keys(E.fonts[i]);for(const s of t){if(!E.fonts[i][s])throw new Error(`The font ${E.fontFamily} does not  have a weight ${s} in style ${i}`);const t=n?.subsets??Object.keys(E.fonts[i][s]);for(const a of t){let t=E.fonts[i]?.[s]?.[a];if(!t)throw new Error(`weight: ${s} subset: ${a} is not available for '${E.fontFamily}'`);let f=`${E.fontFamily}-${i}-${s}-${a}`;const r=e[f];if(r){U.push(r);continue}const F=(0,o.IH)(`Fetching ${E.fontFamily} font ${JSON.stringify({style:i,weight:s,subset:a})}`),c=new FontFace(E.fontFamily,`url(${t}) format('woff2')`,{weight:s,style:i,unicodeRange:E.unicodeRanges[a]}),l=c.load().then((()=>{(n?.document??document).fonts.add(c),(0,o._8)(F)})).catch((E=>{throw e[f]=void 0,E}));e[f]=l,U.push(l)}}}return{fontFamily:E.fontFamily,fonts:E.fonts,unicodeRanges:E.unicodeRanges,waitUntilDone:()=>Promise.all(U).then((()=>{}))}})(U(),E,t)}}]);
//# sourceMappingURL=188866.0e12d519.chunk.js.map