"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[763509],{763509:(n,t,o)=>{o.r(t),o.d(t,{fontFamily:()=>a,getInfo:()=>i,loadFont:()=>f});var e=o(662166),s={},i=()=>({fontFamily:"Maiden Orange",importName:"MaidenOrange",version:"v29",url:"https://fonts.googleapis.com/css2?family=Maiden+Orange:ital,wght@0,400",unicodeRanges:{latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{latin:"https://fonts.gstatic.com/s/maidenorange/v29/kJE1BuIX7AUmhi2V4m08kb1XvOFXCA.woff2"}}}}),a="Maiden Orange",f=(n,t)=>((n,t,o)=>{const i=[],a=t?[t]:Object.keys(n.fonts);for(const f of a){if("undefined"===typeof FontFace)continue;if(!n.fonts[f])throw new Error(`The font ${n.fontFamily} does not have a style ${f}`);const t=o?.weights??Object.keys(n.fonts[f]);for(const a of t){if(!n.fonts[f][a])throw new Error(`The font ${n.fontFamily} does not  have a weight ${a} in style ${f}`);const t=o?.subsets??Object.keys(n.fonts[f][a]);for(const r of t){let t=n.fonts[f]?.[a]?.[r];if(!t)throw new Error(`weight: ${a} subset: ${r} is not available for '${n.fontFamily}'`);let l=`${n.fontFamily}-${f}-${a}-${r}`;const c=s[l];if(c){i.push(c);continue}const h=(0,e.IH)(`Fetching ${n.fontFamily} font ${JSON.stringify({style:f,weight:a,subset:r})}`),g=new FontFace(n.fontFamily,`url(${t}) format('woff2')`,{weight:a,style:f,unicodeRange:n.unicodeRanges[r]}),F=g.load().then((()=>{(o?.document??document).fonts.add(g),(0,e._8)(h)})).catch((n=>{throw s[l]=void 0,n}));s[l]=F,i.push(F)}}}return{fontFamily:n.fontFamily,fonts:n.fonts,unicodeRanges:n.unicodeRanges,waitUntilDone:()=>Promise.all(i).then((()=>{}))}})(i(),n,t)}}]);
//# sourceMappingURL=763509.3d8fe125.chunk.js.map