"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[537717],{537717:(t,n,o)=>{o.r(n),o.d(n,{fontFamily:()=>e,getInfo:()=>i,loadFont:()=>f});var s=o(662166),a={},i=()=>({fontFamily:"Charmonman",importName:"Charmonman",version:"v18",url:"https://fonts.googleapis.com/css2?family=Charmonman:ital,wght@0,400;0,700",unicodeRanges:{thai:"U+0E01-0E5B, U+200C-200D, U+25CC",vietnamese:"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB","latin-ext":"U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF",latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{thai:"https://fonts.gstatic.com/s/charmonman/v18/MjQDmiR3vP_nuxDv47jiaIKivYdh.woff2",vietnamese:"https://fonts.gstatic.com/s/charmonman/v18/MjQDmiR3vP_nuxDv47jiaJmivYdh.woff2","latin-ext":"https://fonts.gstatic.com/s/charmonman/v18/MjQDmiR3vP_nuxDv47jiaJiivYdh.woff2",latin:"https://fonts.gstatic.com/s/charmonman/v18/MjQDmiR3vP_nuxDv47jiaJaivQ.woff2"},700:{thai:"https://fonts.gstatic.com/s/charmonman/v18/MjQAmiR3vP_nuxDv47jiYC2HqKxA9dhm.woff2",vietnamese:"https://fonts.gstatic.com/s/charmonman/v18/MjQAmiR3vP_nuxDv47jiYC2HqLdA9dhm.woff2","latin-ext":"https://fonts.gstatic.com/s/charmonman/v18/MjQAmiR3vP_nuxDv47jiYC2HqLZA9dhm.woff2",latin:"https://fonts.gstatic.com/s/charmonman/v18/MjQAmiR3vP_nuxDv47jiYC2HqLhA9Q.woff2"}}}}),e="Charmonman",f=(t,n)=>((t,n,o)=>{const i=[],e=n?[n]:Object.keys(t.fonts);for(const f of e){if("undefined"===typeof FontFace)continue;if(!t.fonts[f])throw new Error(`The font ${t.fontFamily} does not have a style ${f}`);const n=o?.weights??Object.keys(t.fonts[f]);for(const e of n){if(!t.fonts[f][e])throw new Error(`The font ${t.fontFamily} does not  have a weight ${e} in style ${f}`);const n=o?.subsets??Object.keys(t.fonts[f][e]);for(const m of n){let n=t.fonts[f]?.[e]?.[m];if(!n)throw new Error(`weight: ${e} subset: ${m} is not available for '${t.fontFamily}'`);let h=`${t.fontFamily}-${f}-${e}-${m}`;const c=a[h];if(c){i.push(c);continue}const U=(0,s.IH)(`Fetching ${t.fontFamily} font ${JSON.stringify({style:f,weight:e,subset:m})}`),r=new FontFace(t.fontFamily,`url(${n}) format('woff2')`,{weight:e,style:f,unicodeRange:t.unicodeRanges[m]}),v=r.load().then((()=>{(o?.document??document).fonts.add(r),(0,s._8)(U)})).catch((t=>{throw a[h]=void 0,t}));a[h]=v,i.push(v)}}}return{fontFamily:t.fontFamily,fonts:t.fonts,unicodeRanges:t.unicodeRanges,waitUntilDone:()=>Promise.all(i).then((()=>{}))}})(i(),t,n)}}]);
//# sourceMappingURL=537717.e515db56.chunk.js.map