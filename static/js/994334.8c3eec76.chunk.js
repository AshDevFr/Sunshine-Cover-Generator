"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[994334],{994334:(t,n,o)=>{o.r(n),o.d(n,{fontFamily:()=>f,getInfo:()=>i,loadFont:()=>a});var e=o(662166),s={},i=()=>({fontFamily:"Linefont",importName:"Linefont",version:"v3",url:"https://fonts.googleapis.com/css2?family=Linefont:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900",unicodeRanges:{},fonts:{}}),f="Linefont",a=(t,n)=>((t,n,o)=>{const i=[],f=n?[n]:Object.keys(t.fonts);for(const a of f){if("undefined"===typeof FontFace)continue;if(!t.fonts[a])throw new Error(`The font ${t.fontFamily} does not have a style ${a}`);const n=o?.weights??Object.keys(t.fonts[a]);for(const f of n){if(!t.fonts[a][f])throw new Error(`The font ${t.fontFamily} does not  have a weight ${f} in style ${a}`);const n=o?.subsets??Object.keys(t.fonts[a][f]);for(const r of n){let n=t.fonts[a]?.[f]?.[r];if(!n)throw new Error(`weight: ${f} subset: ${r} is not available for '${t.fontFamily}'`);let c=`${t.fontFamily}-${a}-${f}-${r}`;const l=s[c];if(l){i.push(l);continue}const h=(0,e.IH)(`Fetching ${t.fontFamily} font ${JSON.stringify({style:a,weight:f,subset:r})}`),u=new FontFace(t.fontFamily,`url(${n}) format('woff2')`,{weight:f,style:a,unicodeRange:t.unicodeRanges[r]}),g=u.load().then((()=>{(o?.document??document).fonts.add(u),(0,e._8)(h)})).catch((t=>{throw s[c]=void 0,t}));s[c]=g,i.push(g)}}}return{fontFamily:t.fontFamily,fonts:t.fonts,unicodeRanges:t.unicodeRanges,waitUntilDone:()=>Promise.all(i).then((()=>{}))}})(i(),t,n)}}]);
//# sourceMappingURL=994334.8c3eec76.chunk.js.map