"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[173662],{173662:(o,t,n)=>{n.r(t),n.d(t,{fontFamily:()=>f,getInfo:()=>i,loadFont:()=>U});var e=n(662166),s={},i=()=>({fontFamily:"Flow Rounded",importName:"FlowRounded",version:"v11",url:"https://fonts.googleapis.com/css2?family=Flow+Rounded:ital,wght@0,400",unicodeRanges:{"cyrillic-ext":"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",cyrillic:"U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",vietnamese:"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB","latin-ext":"U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF",latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{"cyrillic-ext":"https://fonts.gstatic.com/s/flowrounded/v11/-zki91mtwsU9qlLiGwD4oQXHq5__buo.woff2",cyrillic:"https://fonts.gstatic.com/s/flowrounded/v11/-zki91mtwsU9qlLiGwD4oQXHop__buo.woff2",vietnamese:"https://fonts.gstatic.com/s/flowrounded/v11/-zki91mtwsU9qlLiGwD4oQXHqZ__buo.woff2","latin-ext":"https://fonts.gstatic.com/s/flowrounded/v11/-zki91mtwsU9qlLiGwD4oQXHqJ__buo.woff2",latin:"https://fonts.gstatic.com/s/flowrounded/v11/-zki91mtwsU9qlLiGwD4oQXHpp__.woff2"}}}}),f="Flow Rounded",U=(o,t)=>((o,t,n)=>{const i=[],f=t?[t]:Object.keys(o.fonts);for(const U of f){if("undefined"===typeof FontFace)continue;if(!o.fonts[U])throw new Error(`The font ${o.fontFamily} does not have a style ${U}`);const t=n?.weights??Object.keys(o.fonts[U]);for(const f of t){if(!o.fonts[U][f])throw new Error(`The font ${o.fontFamily} does not  have a weight ${f} in style ${U}`);const t=n?.subsets??Object.keys(o.fonts[U][f]);for(const l of t){let t=o.fonts[U]?.[f]?.[l];if(!t)throw new Error(`weight: ${f} subset: ${l} is not available for '${o.fontFamily}'`);let a=`${o.fontFamily}-${U}-${f}-${l}`;const c=s[a];if(c){i.push(c);continue}const F=(0,e.IH)(`Fetching ${o.fontFamily} font ${JSON.stringify({style:U,weight:f,subset:l})}`),r=new FontFace(o.fontFamily,`url(${t}) format('woff2')`,{weight:f,style:U,unicodeRange:o.unicodeRanges[l]}),w=r.load().then((()=>{(n?.document??document).fonts.add(r),(0,e._8)(F)})).catch((o=>{throw s[a]=void 0,o}));s[a]=w,i.push(w)}}}return{fontFamily:o.fontFamily,fonts:o.fonts,unicodeRanges:o.unicodeRanges,waitUntilDone:()=>Promise.all(i).then((()=>{}))}})(i(),o,t)}}]);
//# sourceMappingURL=173662.d080b8aa.chunk.js.map