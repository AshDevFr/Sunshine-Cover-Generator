"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[785308],{785308:(t,n,o)=>{o.r(n),o.d(n,{fontFamily:()=>e,getInfo:()=>i,loadFont:()=>r});var s=o(662166),a={},i=()=>({fontFamily:"Tiro Devanagari Sanskrit",importName:"TiroDevanagariSanskrit",version:"v5",url:"https://fonts.googleapis.com/css2?family=Tiro+Devanagari+Sanskrit:ital,wght@0,400;1,400",unicodeRanges:{devanagari:"U+0900-097F, U+1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0-A8FF, U+11B00-11B09","latin-ext":"U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF",latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{italic:{400:{devanagari:"https://fonts.gstatic.com/s/tirodevanagarisanskrit/v5/MCoGzBbr09vVUgVBM8FWu_yZdZkhkg-I0nUlb59ZELsoqteB0w.woff2","latin-ext":"https://fonts.gstatic.com/s/tirodevanagarisanskrit/v5/MCoGzBbr09vVUgVBM8FWu_yZdZkhkg-I0nUlb59ZELsnqteB0w.woff2",latin:"https://fonts.gstatic.com/s/tirodevanagarisanskrit/v5/MCoGzBbr09vVUgVBM8FWu_yZdZkhkg-I0nUlb59ZELspqtc.woff2"}},normal:{400:{devanagari:"https://fonts.gstatic.com/s/tirodevanagarisanskrit/v5/MCoAzBbr09vVUgVBM8FWu_yZdZkhkg-I0nUlb59ZFIsrstM.woff2","latin-ext":"https://fonts.gstatic.com/s/tirodevanagarisanskrit/v5/MCoAzBbr09vVUgVBM8FWu_yZdZkhkg-I0nUlb59ZG4srstM.woff2",latin:"https://fonts.gstatic.com/s/tirodevanagarisanskrit/v5/MCoAzBbr09vVUgVBM8FWu_yZdZkhkg-I0nUlb59ZFYsr.woff2"}}}}),e="Tiro Devanagari Sanskrit",r=(t,n)=>((t,n,o)=>{const i=[],e=n?[n]:Object.keys(t.fonts);for(const r of e){if("undefined"===typeof FontFace)continue;if(!t.fonts[r])throw new Error(`The font ${t.fontFamily} does not have a style ${r}`);const n=o?.weights??Object.keys(t.fonts[r]);for(const e of n){if(!t.fonts[r][e])throw new Error(`The font ${t.fontFamily} does not  have a weight ${e} in style ${r}`);const n=o?.subsets??Object.keys(t.fonts[r][e]);for(const f of n){let n=t.fonts[r]?.[e]?.[f];if(!n)throw new Error(`weight: ${e} subset: ${f} is not available for '${t.fontFamily}'`);let U=`${t.fontFamily}-${r}-${e}-${f}`;const g=a[U];if(g){i.push(g);continue}const F=(0,s.IH)(`Fetching ${t.fontFamily} font ${JSON.stringify({style:r,weight:e,subset:f})}`),c=new FontFace(t.fontFamily,`url(${n}) format('woff2')`,{weight:e,style:r,unicodeRange:t.unicodeRanges[f]}),l=c.load().then((()=>{(o?.document??document).fonts.add(c),(0,s._8)(F)})).catch((t=>{throw a[U]=void 0,t}));a[U]=l,i.push(l)}}}return{fontFamily:t.fontFamily,fonts:t.fonts,unicodeRanges:t.unicodeRanges,waitUntilDone:()=>Promise.all(i).then((()=>{}))}})(i(),t,n)}}]);
//# sourceMappingURL=785308.fee3be8e.chunk.js.map