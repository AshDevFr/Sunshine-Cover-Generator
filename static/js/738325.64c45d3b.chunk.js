"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[738325],{738325:(n,t,e)=>{e.r(t),e.d(t,{fontFamily:()=>i,getInfo:()=>a,loadFont:()=>f});var o=e(662166),s={},a=()=>({fontFamily:"Germania One",importName:"GermaniaOne",version:"v20",url:"https://fonts.googleapis.com/css2?family=Germania+One:ital,wght@0,400",unicodeRanges:{latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{latin:"https://fonts.gstatic.com/s/germaniaone/v20/Fh4yPjrqIyv2ucM2qzBjeS3uywhP.woff2"}}}}),i="Germania One",f=(n,t)=>((n,t,e)=>{const a=[],i=t?[t]:Object.keys(n.fonts);for(const f of i){if("undefined"===typeof FontFace)continue;if(!n.fonts[f])throw new Error(`The font ${n.fontFamily} does not have a style ${f}`);const t=e?.weights??Object.keys(n.fonts[f]);for(const i of t){if(!n.fonts[f][i])throw new Error(`The font ${n.fontFamily} does not  have a weight ${i} in style ${f}`);const t=e?.subsets??Object.keys(n.fonts[f][i]);for(const r of t){let t=n.fonts[f]?.[i]?.[r];if(!t)throw new Error(`weight: ${i} subset: ${r} is not available for '${n.fontFamily}'`);let c=`${n.fontFamily}-${f}-${i}-${r}`;const l=s[c];if(l){a.push(l);continue}const h=(0,o.IH)(`Fetching ${n.fontFamily} font ${JSON.stringify({style:f,weight:i,subset:r})}`),m=new FontFace(n.fontFamily,`url(${t}) format('woff2')`,{weight:i,style:f,unicodeRange:n.unicodeRanges[r]}),u=m.load().then((()=>{(e?.document??document).fonts.add(m),(0,o._8)(h)})).catch((n=>{throw s[c]=void 0,n}));s[c]=u,a.push(u)}}}return{fontFamily:n.fontFamily,fonts:n.fonts,unicodeRanges:n.unicodeRanges,waitUntilDone:()=>Promise.all(a).then((()=>{}))}})(a(),n,t)}}]);
//# sourceMappingURL=738325.64c45d3b.chunk.js.map