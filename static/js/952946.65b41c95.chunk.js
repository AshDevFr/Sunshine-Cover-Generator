"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[952946],{952946:(t,o,n)=>{n.r(o),n.d(o,{fontFamily:()=>i,getInfo:()=>f,loadFont:()=>l});var e=n(662166),s={},f=()=>({fontFamily:"Flow Block",importName:"FlowBlock",version:"v11",url:"https://fonts.googleapis.com/css2?family=Flow+Block:ital,wght@0,400",unicodeRanges:{"cyrillic-ext":"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",cyrillic:"U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",vietnamese:"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB","latin-ext":"U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF",latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{"cyrillic-ext":"https://fonts.gstatic.com/s/flowblock/v11/wlp0gwfPCEB65UmTk-d6yWxvbRBX.woff2",cyrillic:"https://fonts.gstatic.com/s/flowblock/v11/wlp0gwfPCEB65UmTk-d6yWVvbRBX.woff2",vietnamese:"https://fonts.gstatic.com/s/flowblock/v11/wlp0gwfPCEB65UmTk-d6yW5vbRBX.woff2","latin-ext":"https://fonts.gstatic.com/s/flowblock/v11/wlp0gwfPCEB65UmTk-d6yW9vbRBX.woff2",latin:"https://fonts.gstatic.com/s/flowblock/v11/wlp0gwfPCEB65UmTk-d6yWFvbQ.woff2"}}}}),i="Flow Block",l=(t,o)=>((t,o,n)=>{const f=[],i=o?[o]:Object.keys(t.fonts);for(const l of i){if("undefined"===typeof FontFace)continue;if(!t.fonts[l])throw new Error(`The font ${t.fontFamily} does not have a style ${l}`);const o=n?.weights??Object.keys(t.fonts[l]);for(const i of o){if(!t.fonts[l][i])throw new Error(`The font ${t.fontFamily} does not  have a weight ${i} in style ${l}`);const o=n?.subsets??Object.keys(t.fonts[l][i]);for(const U of o){let o=t.fonts[l]?.[i]?.[U];if(!o)throw new Error(`weight: ${i} subset: ${U} is not available for '${t.fontFamily}'`);let c=`${t.fontFamily}-${l}-${i}-${U}`;const a=s[c];if(a){f.push(a);continue}const F=(0,e.IH)(`Fetching ${t.fontFamily} font ${JSON.stringify({style:l,weight:i,subset:U})}`),w=new FontFace(t.fontFamily,`url(${o}) format('woff2')`,{weight:i,style:l,unicodeRange:t.unicodeRanges[U]}),r=w.load().then((()=>{(n?.document??document).fonts.add(w),(0,e._8)(F)})).catch((t=>{throw s[c]=void 0,t}));s[c]=r,f.push(r)}}}return{fontFamily:t.fontFamily,fonts:t.fonts,unicodeRanges:t.unicodeRanges,waitUntilDone:()=>Promise.all(f).then((()=>{}))}})(f(),t,o)}}]);
//# sourceMappingURL=952946.65b41c95.chunk.js.map