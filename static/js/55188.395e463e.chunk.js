"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[55188],{55188:(t,o,n)=>{n.r(o),n.d(o,{fontFamily:()=>c,getInfo:()=>s,loadFont:()=>a});var e=n(662166),i={},s=()=>({fontFamily:"Didact Gothic",importName:"DidactGothic",version:"v20",url:"https://fonts.googleapis.com/css2?family=Didact+Gothic:ital,wght@0,400",unicodeRanges:{"cyrillic-ext":"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",cyrillic:"U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116","greek-ext":"U+1F00-1FFF",greek:"U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF","latin-ext":"U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF",latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{"cyrillic-ext":"https://fonts.gstatic.com/s/didactgothic/v20/ahcfv8qz1zt6hCC5G4F_P4ASlUaYpnLl.woff2",cyrillic:"https://fonts.gstatic.com/s/didactgothic/v20/ahcfv8qz1zt6hCC5G4F_P4ASlU-YpnLl.woff2","greek-ext":"https://fonts.gstatic.com/s/didactgothic/v20/ahcfv8qz1zt6hCC5G4F_P4ASlUeYpnLl.woff2",greek:"https://fonts.gstatic.com/s/didactgothic/v20/ahcfv8qz1zt6hCC5G4F_P4ASlUiYpnLl.woff2","latin-ext":"https://fonts.gstatic.com/s/didactgothic/v20/ahcfv8qz1zt6hCC5G4F_P4ASlUWYpnLl.woff2",latin:"https://fonts.gstatic.com/s/didactgothic/v20/ahcfv8qz1zt6hCC5G4F_P4ASlUuYpg.woff2"}}}}),c="Didact Gothic",a=(t,o)=>((t,o,n)=>{const s=[],c=o?[o]:Object.keys(t.fonts);for(const a of c){if("undefined"===typeof FontFace)continue;if(!t.fonts[a])throw new Error(`The font ${t.fontFamily} does not have a style ${a}`);const o=n?.weights??Object.keys(t.fonts[a]);for(const c of o){if(!t.fonts[a][c])throw new Error(`The font ${t.fontFamily} does not  have a weight ${c} in style ${a}`);const o=n?.subsets??Object.keys(t.fonts[a][c]);for(const f of o){let o=t.fonts[a]?.[c]?.[f];if(!o)throw new Error(`weight: ${c} subset: ${f} is not available for '${t.fontFamily}'`);let U=`${t.fontFamily}-${a}-${c}-${f}`;const h=i[U];if(h){s.push(h);continue}const l=(0,e.IH)(`Fetching ${t.fontFamily} font ${JSON.stringify({style:a,weight:c,subset:f})}`),F=new FontFace(t.fontFamily,`url(${o}) format('woff2')`,{weight:c,style:a,unicodeRange:t.unicodeRanges[f]}),r=F.load().then((()=>{(n?.document??document).fonts.add(F),(0,e._8)(l)})).catch((t=>{throw i[U]=void 0,t}));i[U]=r,s.push(r)}}}return{fontFamily:t.fontFamily,fonts:t.fonts,unicodeRanges:t.unicodeRanges,waitUntilDone:()=>Promise.all(s).then((()=>{}))}})(s(),t,o)}}]);
//# sourceMappingURL=55188.395e463e.chunk.js.map