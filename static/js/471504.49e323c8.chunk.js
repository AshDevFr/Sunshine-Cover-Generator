"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[471504],{471504:(t,i,s)=>{s.r(i),s.d(i,{fontFamily:()=>e,getInfo:()=>f,loadFont:()=>a});var n=s(662166),o={},f=()=>({fontFamily:"Pixelify Sans",importName:"PixelifySans",version:"v1",url:"https://fonts.googleapis.com/css2?family=Pixelify+Sans:ital,wght@0,400;0,500;0,600;0,700",unicodeRanges:{cyrillic:"U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116","latin-ext":"U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF",latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{cyrillic:"https://fonts.gstatic.com/s/pixelifysans/v1/CHylV-3HFUT7aC4iv1TxGDR9JnkEi1lR.woff2","latin-ext":"https://fonts.gstatic.com/s/pixelifysans/v1/CHylV-3HFUT7aC4iv1TxGDR9JnMEi1lR.woff2",latin:"https://fonts.gstatic.com/s/pixelifysans/v1/CHylV-3HFUT7aC4iv1TxGDR9Jn0Eiw.woff2"},500:{cyrillic:"https://fonts.gstatic.com/s/pixelifysans/v1/CHylV-3HFUT7aC4iv1TxGDR9JnkEi1lR.woff2","latin-ext":"https://fonts.gstatic.com/s/pixelifysans/v1/CHylV-3HFUT7aC4iv1TxGDR9JnMEi1lR.woff2",latin:"https://fonts.gstatic.com/s/pixelifysans/v1/CHylV-3HFUT7aC4iv1TxGDR9Jn0Eiw.woff2"},600:{cyrillic:"https://fonts.gstatic.com/s/pixelifysans/v1/CHylV-3HFUT7aC4iv1TxGDR9JnkEi1lR.woff2","latin-ext":"https://fonts.gstatic.com/s/pixelifysans/v1/CHylV-3HFUT7aC4iv1TxGDR9JnMEi1lR.woff2",latin:"https://fonts.gstatic.com/s/pixelifysans/v1/CHylV-3HFUT7aC4iv1TxGDR9Jn0Eiw.woff2"},700:{cyrillic:"https://fonts.gstatic.com/s/pixelifysans/v1/CHylV-3HFUT7aC4iv1TxGDR9JnkEi1lR.woff2","latin-ext":"https://fonts.gstatic.com/s/pixelifysans/v1/CHylV-3HFUT7aC4iv1TxGDR9JnMEi1lR.woff2",latin:"https://fonts.gstatic.com/s/pixelifysans/v1/CHylV-3HFUT7aC4iv1TxGDR9Jn0Eiw.woff2"}}}}),e="Pixelify Sans",a=(t,i)=>((t,i,s)=>{const f=[],e=i?[i]:Object.keys(t.fonts);for(const a of e){if("undefined"===typeof FontFace)continue;if(!t.fonts[a])throw new Error(`The font ${t.fontFamily} does not have a style ${a}`);const i=s?.weights??Object.keys(t.fonts[a]);for(const e of i){if(!t.fonts[a][e])throw new Error(`The font ${t.fontFamily} does not  have a weight ${e} in style ${a}`);const i=s?.subsets??Object.keys(t.fonts[a][e]);for(const l of i){let i=t.fonts[a]?.[e]?.[l];if(!i)throw new Error(`weight: ${e} subset: ${l} is not available for '${t.fontFamily}'`);let c=`${t.fontFamily}-${a}-${e}-${l}`;const y=o[c];if(y){f.push(y);continue}const U=(0,n.IH)(`Fetching ${t.fontFamily} font ${JSON.stringify({style:a,weight:e,subset:l})}`),F=new FontFace(t.fontFamily,`url(${i}) format('woff2')`,{weight:e,style:a,unicodeRange:t.unicodeRanges[l]}),r=F.load().then((()=>{(s?.document??document).fonts.add(F),(0,n._8)(U)})).catch((t=>{throw o[c]=void 0,t}));o[c]=r,f.push(r)}}}return{fontFamily:t.fontFamily,fonts:t.fonts,unicodeRanges:t.unicodeRanges,waitUntilDone:()=>Promise.all(f).then((()=>{}))}})(f(),t,i)}}]);
//# sourceMappingURL=471504.49e323c8.chunk.js.map