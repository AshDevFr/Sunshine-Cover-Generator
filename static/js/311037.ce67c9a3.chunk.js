"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[311037],{311037:(t,e,o)=>{o.r(e),o.d(e,{fontFamily:()=>a,getInfo:()=>i,loadFont:()=>f});var n=o(662166),s={},i=()=>({fontFamily:"Libre Barcode OneTwoEight Text",importName:"LibreBarcode128Text",version:"v28",url:"https://fonts.googleapis.com/css2?family=Libre+Barcode+128+Text:ital,wght@0,400",unicodeRanges:{latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{latin:"https://fonts.gstatic.com/s/librebarcode128text/v28/fdNv9tubt3ZEnz1Gu3I4-zppwZ9CWZ16Z0w5QVrS6Q.woff2"}}}}),a="Libre Barcode OneTwoEight Text",f=(t,e)=>((t,e,o)=>{const i=[],a=e?[e]:Object.keys(t.fonts);for(const f of a){if("undefined"===typeof FontFace)continue;if(!t.fonts[f])throw new Error(`The font ${t.fontFamily} does not have a style ${f}`);const e=o?.weights??Object.keys(t.fonts[f]);for(const a of e){if(!t.fonts[f][a])throw new Error(`The font ${t.fontFamily} does not  have a weight ${a} in style ${f}`);const e=o?.subsets??Object.keys(t.fonts[f][a]);for(const r of e){let e=t.fonts[f]?.[a]?.[r];if(!e)throw new Error(`weight: ${a} subset: ${r} is not available for '${t.fontFamily}'`);let c=`${t.fontFamily}-${f}-${a}-${r}`;const l=s[c];if(l){i.push(l);continue}const h=(0,n.IH)(`Fetching ${t.fontFamily} font ${JSON.stringify({style:f,weight:a,subset:r})}`),u=new FontFace(t.fontFamily,`url(${e}) format('woff2')`,{weight:a,style:f,unicodeRange:t.unicodeRanges[r]}),F=u.load().then((()=>{(o?.document??document).fonts.add(u),(0,n._8)(h)})).catch((t=>{throw s[c]=void 0,t}));s[c]=F,i.push(F)}}}return{fontFamily:t.fontFamily,fonts:t.fonts,unicodeRanges:t.unicodeRanges,waitUntilDone:()=>Promise.all(i).then((()=>{}))}})(i(),t,e)}}]);
//# sourceMappingURL=311037.ce67c9a3.chunk.js.map