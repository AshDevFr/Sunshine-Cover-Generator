"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[254788],{254788:(o,t,n)=>{n.r(t),n.d(t,{fontFamily:()=>a,getInfo:()=>i,loadFont:()=>f});var e=n(662166),s={},i=()=>({fontFamily:"Macondo",importName:"Macondo",version:"v25",url:"https://fonts.googleapis.com/css2?family=Macondo:ital,wght@0,400",unicodeRanges:{latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{latin:"https://fonts.gstatic.com/s/macondo/v25/RrQQboN9-iB1IXmOe2LE0Q.woff2"}}}}),a="Macondo",f=(o,t)=>((o,t,n)=>{const i=[],a=t?[t]:Object.keys(o.fonts);for(const f of a){if("undefined"===typeof FontFace)continue;if(!o.fonts[f])throw new Error(`The font ${o.fontFamily} does not have a style ${f}`);const t=n?.weights??Object.keys(o.fonts[f]);for(const a of t){if(!o.fonts[f][a])throw new Error(`The font ${o.fontFamily} does not  have a weight ${a} in style ${f}`);const t=n?.subsets??Object.keys(o.fonts[f][a]);for(const c of t){let t=o.fonts[f]?.[a]?.[c];if(!t)throw new Error(`weight: ${a} subset: ${c} is not available for '${o.fontFamily}'`);let r=`${o.fontFamily}-${f}-${a}-${c}`;const l=s[r];if(l){i.push(l);continue}const h=(0,e.IH)(`Fetching ${o.fontFamily} font ${JSON.stringify({style:f,weight:a,subset:c})}`),F=new FontFace(o.fontFamily,`url(${t}) format('woff2')`,{weight:a,style:f,unicodeRange:o.unicodeRanges[c]}),m=F.load().then((()=>{(n?.document??document).fonts.add(F),(0,e._8)(h)})).catch((o=>{throw s[r]=void 0,o}));s[r]=m,i.push(m)}}}return{fontFamily:o.fontFamily,fonts:o.fonts,unicodeRanges:o.unicodeRanges,waitUntilDone:()=>Promise.all(i).then((()=>{}))}})(i(),o,t)}}]);
//# sourceMappingURL=254788.3e6186bd.chunk.js.map