"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[502368],{502368:(t,s,e)=>{e.r(s),e.d(s,{fontFamily:()=>f,getInfo:()=>i,loadFont:()=>r});var o=e(662166),n={},i=()=>({fontFamily:"Rubik Distressed",importName:"RubikDistressed",version:"v1",url:"https://fonts.googleapis.com/css2?family=Rubik+Distressed:ital,wght@0,400",unicodeRanges:{"cyrillic-ext":"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",cyrillic:"U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",hebrew:"U+0590-05FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F","latin-ext":"U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF",latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{"cyrillic-ext":"https://fonts.gstatic.com/s/rubikdistressed/v1/GFDxWBdsmnqAVqjtUsZf2dcrQ2ldQWora-VB.woff2",cyrillic:"https://fonts.gstatic.com/s/rubikdistressed/v1/GFDxWBdsmnqAVqjtUsZf2dcrQ2ldQWMra-VB.woff2",hebrew:"https://fonts.gstatic.com/s/rubikdistressed/v1/GFDxWBdsmnqAVqjtUsZf2dcrQ2ldQWUra-VB.woff2","latin-ext":"https://fonts.gstatic.com/s/rubikdistressed/v1/GFDxWBdsmnqAVqjtUsZf2dcrQ2ldQWkra-VB.woff2",latin:"https://fonts.gstatic.com/s/rubikdistressed/v1/GFDxWBdsmnqAVqjtUsZf2dcrQ2ldQWcraw.woff2"}}}}),f="Rubik Distressed",r=(t,s)=>((t,s,e)=>{const i=[],f=s?[s]:Object.keys(t.fonts);for(const r of f){if("undefined"===typeof FontFace)continue;if(!t.fonts[r])throw new Error(`The font ${t.fontFamily} does not have a style ${r}`);const s=e?.weights??Object.keys(t.fonts[r]);for(const f of s){if(!t.fonts[r][f])throw new Error(`The font ${t.fontFamily} does not  have a weight ${f} in style ${r}`);const s=e?.subsets??Object.keys(t.fonts[r][f]);for(const a of s){let s=t.fonts[r]?.[f]?.[a];if(!s)throw new Error(`weight: ${f} subset: ${a} is not available for '${t.fontFamily}'`);let U=`${t.fontFamily}-${r}-${f}-${a}`;const c=n[U];if(c){i.push(c);continue}const F=(0,o.IH)(`Fetching ${t.fontFamily} font ${JSON.stringify({style:r,weight:f,subset:a})}`),l=new FontFace(t.fontFamily,`url(${s}) format('woff2')`,{weight:f,style:r,unicodeRange:t.unicodeRanges[a]}),d=l.load().then((()=>{(e?.document??document).fonts.add(l),(0,o._8)(F)})).catch((t=>{throw n[U]=void 0,t}));n[U]=d,i.push(d)}}}return{fontFamily:t.fontFamily,fonts:t.fonts,unicodeRanges:t.unicodeRanges,waitUntilDone:()=>Promise.all(i).then((()=>{}))}})(i(),t,s)}}]);
//# sourceMappingURL=502368.1d2ebc6e.chunk.js.map