"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[76167],{76167:(t,o,n)=>{n.r(o),n.d(o,{fontFamily:()=>s,getInfo:()=>a,loadFont:()=>f});var i=n(662166),e={},a=()=>({fontFamily:"Tiro Devanagari Hindi",importName:"TiroDevanagariHindi",version:"v5",url:"https://fonts.googleapis.com/css2?family=Tiro+Devanagari+Hindi:ital,wght@0,400;1,400",unicodeRanges:{devanagari:"U+0900-097F, U+1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0-A8FF, U+11B00-11B09","latin-ext":"U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF",latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{italic:{400:{devanagari:"https://fonts.gstatic.com/s/tirodevanagarihindi/v5/55x8ezN7P8T4e0_CfIJrwdodg9HoYw0i-M9vStMMVGk43A.woff2","latin-ext":"https://fonts.gstatic.com/s/tirodevanagarihindi/v5/55x8ezN7P8T4e0_CfIJrwdodg9HoYw0i-M9vStMDVGk43A.woff2",latin:"https://fonts.gstatic.com/s/tirodevanagarihindi/v5/55x8ezN7P8T4e0_CfIJrwdodg9HoYw0i-M9vStMNVGk.woff2"}},normal:{400:{devanagari:"https://fonts.gstatic.com/s/tirodevanagarihindi/v5/55xyezN7P8T4e0_CfIJrwdodg9HoYw0i-M9vTuMPTG0.woff2","latin-ext":"https://fonts.gstatic.com/s/tirodevanagarihindi/v5/55xyezN7P8T4e0_CfIJrwdodg9HoYw0i-M9vQeMPTG0.woff2",latin:"https://fonts.gstatic.com/s/tirodevanagarihindi/v5/55xyezN7P8T4e0_CfIJrwdodg9HoYw0i-M9vT-MP.woff2"}}}}),s="Tiro Devanagari Hindi",f=(t,o)=>((t,o,n)=>{const a=[],s=o?[o]:Object.keys(t.fonts);for(const f of s){if("undefined"===typeof FontFace)continue;if(!t.fonts[f])throw new Error(`The font ${t.fontFamily} does not have a style ${f}`);const o=n?.weights??Object.keys(t.fonts[f]);for(const s of o){if(!t.fonts[f][s])throw new Error(`The font ${t.fontFamily} does not  have a weight ${s} in style ${f}`);const o=n?.subsets??Object.keys(t.fonts[f][s]);for(const r of o){let o=t.fonts[f]?.[s]?.[r];if(!o)throw new Error(`weight: ${s} subset: ${r} is not available for '${t.fontFamily}'`);let d=`${t.fontFamily}-${f}-${s}-${r}`;const g=e[d];if(g){a.push(g);continue}const c=(0,i.IH)(`Fetching ${t.fontFamily} font ${JSON.stringify({style:f,weight:s,subset:r})}`),U=new FontFace(t.fontFamily,`url(${o}) format('woff2')`,{weight:s,style:f,unicodeRange:t.unicodeRanges[r]}),h=U.load().then((()=>{(n?.document??document).fonts.add(U),(0,i._8)(c)})).catch((t=>{throw e[d]=void 0,t}));e[d]=h,a.push(h)}}}return{fontFamily:t.fontFamily,fonts:t.fonts,unicodeRanges:t.unicodeRanges,waitUntilDone:()=>Promise.all(a).then((()=>{}))}})(a(),t,o)}}]);
//# sourceMappingURL=76167.9be2f8e5.chunk.js.map