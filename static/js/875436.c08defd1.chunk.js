"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[875436],{875436:(t,s,o)=>{o.r(s),o.d(s,{fontFamily:()=>c,getInfo:()=>e,loadFont:()=>a});var n=o(662166),i={},e=()=>({fontFamily:"Amatic SC",importName:"AmaticSC",version:"v26",url:"https://fonts.googleapis.com/css2?family=Amatic+SC:ital,wght@0,400;0,700",unicodeRanges:{cyrillic:"U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",hebrew:"U+0590-05FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F",vietnamese:"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB","latin-ext":"U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF",latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{cyrillic:"https://fonts.gstatic.com/s/amaticsc/v26/TUZyzwprpvBS1izr_vOEDuSfQZQ.woff2",hebrew:"https://fonts.gstatic.com/s/amaticsc/v26/TUZyzwprpvBS1izr_vOECOSfQZQ.woff2",vietnamese:"https://fonts.gstatic.com/s/amaticsc/v26/TUZyzwprpvBS1izr_vOEBeSfQZQ.woff2","latin-ext":"https://fonts.gstatic.com/s/amaticsc/v26/TUZyzwprpvBS1izr_vOEBOSfQZQ.woff2",latin:"https://fonts.gstatic.com/s/amaticsc/v26/TUZyzwprpvBS1izr_vOECuSf.woff2"},700:{cyrillic:"https://fonts.gstatic.com/s/amaticsc/v26/TUZ3zwprpvBS1izr_vOMscGKerUC7WQ.woff2",hebrew:"https://fonts.gstatic.com/s/amaticsc/v26/TUZ3zwprpvBS1izr_vOMscGKfLUC7WQ.woff2",vietnamese:"https://fonts.gstatic.com/s/amaticsc/v26/TUZ3zwprpvBS1izr_vOMscGKcbUC7WQ.woff2","latin-ext":"https://fonts.gstatic.com/s/amaticsc/v26/TUZ3zwprpvBS1izr_vOMscGKcLUC7WQ.woff2",latin:"https://fonts.gstatic.com/s/amaticsc/v26/TUZ3zwprpvBS1izr_vOMscGKfrUC.woff2"}}}}),c="Amatic SC",a=(t,s)=>((t,s,o)=>{const e=[],c=s?[s]:Object.keys(t.fonts);for(const a of c){if("undefined"===typeof FontFace)continue;if(!t.fonts[a])throw new Error(`The font ${t.fontFamily} does not have a style ${a}`);const s=o?.weights??Object.keys(t.fonts[a]);for(const c of s){if(!t.fonts[a][c])throw new Error(`The font ${t.fontFamily} does not  have a weight ${c} in style ${a}`);const s=o?.subsets??Object.keys(t.fonts[a][c]);for(const f of s){let s=t.fonts[a]?.[c]?.[f];if(!s)throw new Error(`weight: ${c} subset: ${f} is not available for '${t.fontFamily}'`);let U=`${t.fontFamily}-${a}-${c}-${f}`;const r=i[U];if(r){e.push(r);continue}const m=(0,n.IH)(`Fetching ${t.fontFamily} font ${JSON.stringify({style:a,weight:c,subset:f})}`),l=new FontFace(t.fontFamily,`url(${s}) format('woff2')`,{weight:c,style:a,unicodeRange:t.unicodeRanges[f]}),w=l.load().then((()=>{(o?.document??document).fonts.add(l),(0,n._8)(m)})).catch((t=>{throw i[U]=void 0,t}));i[U]=w,e.push(w)}}}return{fontFamily:t.fontFamily,fonts:t.fonts,unicodeRanges:t.unicodeRanges,waitUntilDone:()=>Promise.all(e).then((()=>{}))}})(e(),t,s)}}]);
//# sourceMappingURL=875436.c08defd1.chunk.js.map