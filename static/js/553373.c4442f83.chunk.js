"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[553373],{553373:(n,t,e)=>{e.r(t),e.d(t,{fontFamily:()=>a,getInfo:()=>i,loadFont:()=>f});var o=e(662166),s={},i=()=>({fontFamily:"Alumni Sans Inline One",importName:"AlumniSansInlineOne",version:"v5",url:"https://fonts.googleapis.com/css2?family=Alumni+Sans+Inline+One:ital,wght@0,400;1,400",unicodeRanges:{vietnamese:"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB","latin-ext":"U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF",latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{italic:{400:{vietnamese:"https://fonts.gstatic.com/s/alumnisansinlineone/v5/RrQDbpJx9zZ3IXTBOASKp5gJAetBdaihcjbpP3Ijfpb1TYw.woff2","latin-ext":"https://fonts.gstatic.com/s/alumnisansinlineone/v5/RrQDbpJx9zZ3IXTBOASKp5gJAetBdaihcjbpP3Ijf5b1TYw.woff2",latin:"https://fonts.gstatic.com/s/alumnisansinlineone/v5/RrQDbpJx9zZ3IXTBOASKp5gJAetBdaihcjbpP3IjcZb1.woff2"}},normal:{400:{vietnamese:"https://fonts.gstatic.com/s/alumnisansinlineone/v5/RrQBbpJx9zZ3IXTBOASKp5gJAetBdaihcjbpP3gTc47x.woff2","latin-ext":"https://fonts.gstatic.com/s/alumnisansinlineone/v5/RrQBbpJx9zZ3IXTBOASKp5gJAetBdaihcjbpP3kTc47x.woff2",latin:"https://fonts.gstatic.com/s/alumnisansinlineone/v5/RrQBbpJx9zZ3IXTBOASKp5gJAetBdaihcjbpP3cTcw.woff2"}}}}),a="Alumni Sans Inline One",f=(n,t)=>((n,t,e)=>{const i=[],a=t?[t]:Object.keys(n.fonts);for(const f of a){if("undefined"===typeof FontFace)continue;if(!n.fonts[f])throw new Error(`The font ${n.fontFamily} does not have a style ${f}`);const t=e?.weights??Object.keys(n.fonts[f]);for(const a of t){if(!n.fonts[f][a])throw new Error(`The font ${n.fontFamily} does not  have a weight ${a} in style ${f}`);const t=e?.subsets??Object.keys(n.fonts[f][a]);for(const l of t){let t=n.fonts[f]?.[a]?.[l];if(!t)throw new Error(`weight: ${a} subset: ${l} is not available for '${n.fontFamily}'`);let c=`${n.fontFamily}-${f}-${a}-${l}`;const U=s[c];if(U){i.push(U);continue}const m=(0,o.IH)(`Fetching ${n.fontFamily} font ${JSON.stringify({style:f,weight:a,subset:l})}`),r=new FontFace(n.fontFamily,`url(${t}) format('woff2')`,{weight:a,style:f,unicodeRange:n.unicodeRanges[l]}),h=r.load().then((()=>{(e?.document??document).fonts.add(r),(0,o._8)(m)})).catch((n=>{throw s[c]=void 0,n}));s[c]=h,i.push(h)}}}return{fontFamily:n.fontFamily,fonts:n.fonts,unicodeRanges:n.unicodeRanges,waitUntilDone:()=>Promise.all(i).then((()=>{}))}})(i(),n,t)}}]);
//# sourceMappingURL=553373.c4442f83.chunk.js.map