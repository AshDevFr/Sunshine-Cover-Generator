"use strict";(self.webpackChunksunshine_image_generator=self.webpackChunksunshine_image_generator||[]).push([[511118],{511118:(n,t,o)=>{o.r(t),o.d(t,{fontFamily:()=>a,getInfo:()=>i,loadFont:()=>f});var e=o(662166),s={},i=()=>({fontFamily:"Fascinate Inline",importName:"FascinateInline",version:"v22",url:"https://fonts.googleapis.com/css2?family=Fascinate+Inline:ital,wght@0,400",unicodeRanges:{latin:"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD"},fonts:{normal:{400:{latin:"https://fonts.gstatic.com/s/fascinateinline/v22/jVyR7mzzB3zc-jp6QCAu60poNqIy5grIfA.woff2"}}}}),a="Fascinate Inline",f=(n,t)=>((n,t,o)=>{const i=[],a=t?[t]:Object.keys(n.fonts);for(const f of a){if("undefined"===typeof FontFace)continue;if(!n.fonts[f])throw new Error(`The font ${n.fontFamily} does not have a style ${f}`);const t=o?.weights??Object.keys(n.fonts[f]);for(const a of t){if(!n.fonts[f][a])throw new Error(`The font ${n.fontFamily} does not  have a weight ${a} in style ${f}`);const t=o?.subsets??Object.keys(n.fonts[f][a]);for(const c of t){let t=n.fonts[f]?.[a]?.[c];if(!t)throw new Error(`weight: ${a} subset: ${c} is not available for '${n.fontFamily}'`);let l=`${n.fontFamily}-${f}-${a}-${c}`;const r=s[l];if(r){i.push(r);continue}const F=(0,e.IH)(`Fetching ${n.fontFamily} font ${JSON.stringify({style:f,weight:a,subset:c})}`),h=new FontFace(n.fontFamily,`url(${t}) format('woff2')`,{weight:a,style:f,unicodeRange:n.unicodeRanges[c]}),u=h.load().then((()=>{(o?.document??document).fonts.add(h),(0,e._8)(F)})).catch((n=>{throw s[l]=void 0,n}));s[l]=u,i.push(u)}}}return{fontFamily:n.fontFamily,fonts:n.fonts,unicodeRanges:n.unicodeRanges,waitUntilDone:()=>Promise.all(i).then((()=>{}))}})(i(),n,t)}}]);
//# sourceMappingURL=511118.f8f4b0da.chunk.js.map